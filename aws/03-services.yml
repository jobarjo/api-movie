---
AWSTemplateFormatVersion: '2010-09-09'
Description: "Movie API"

Parameters:
  ProjectName:
    Type: String
  BranchName:
    Type: String
  ECRRepositoryName:
    Type: String
    Description: "ECR repository where to push the docker image"
  ECSClusterName:
    Type: String
    Description: "ECS cluster where to launch the task"
  PublicLoadBalancerTargetGroupArn:
    Type: String
    Description: "ARN of the target group associated with the service"

Mappings:
  BranchName:
    dev:
      ServiceDesiredCount: 1
      TaskCpuUnits: 256
      TaskReservedMemory: 256
    uat:
      ServiceDesiredCount: 1
      TaskCpuUnits: 256
      TaskReservedMemory: 256
    prod:
      ServiceDesiredCount: 2
      TaskCpuUnits: 1024
      TaskReservedMemory: 1024

Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSClusterName
      DesiredCount: !FindInMap [
        BranchName,
        !Ref BranchName,
        ServiceDesiredCount
      ]
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: !Ref ProjectName
          ContainerPort: 8080
          TargetGroupArn: !Ref PublicLoadBalancerTargetGroupArn
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref ECSTaskDefinition

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !GetAtt ECSTaskRole.Arn
      Family: !Sub "${ProjectName}-${BranchName}"
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: !Ref ProjectName
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepositoryName}:latest"
          Memory: !FindInMap [ BranchName, !Ref BranchName, TaskReservedMemory ]
          Cpu: !FindInMap [ BranchName, !Ref BranchName, TaskCpuUnits ]
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: DEV_ENV
              Value: !Ref BranchName
            - Name: SERVER_NAME
              Value: !Ref ProjectName
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/${ProjectName}-${BranchName}
      RetentionInDays: 7

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

      # Policies:
      #   - PolicyName: "ECR-and-logs"
      #     PolicyDocument:
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - "ecr:GetDownloadUrlForLayer"
      #             - "ecr:BatchGetImage"
      #             # - "ecr:DescribeImages"
      #             - "ecr:GetAuthorizationToken"
      #             # - "ecr:DescribeRepositories"
      #             # - "ecr:ListImages"
      #             - "ecr:BatchCheckLayerAvailability"
      #             - "logs:CreateLogStream"
      #             - "logs:PutLogEvents"
      #           Resource:
      #             - "*"
