---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Movie API ECS infrastructure'

Parameters:
  Name:
    Type: String
    Default: api-movie
    Description: Name of the API to identify associated resources. 
  DevEnvironment:
    Type: String
    Description: The deployment environment 
    AllowedValues:
      - dev
      - uat
      - prod
  AwsAccountId:
    Type: String
    Description: AWS Elastic Load Balancing Account ID used to allow ELBs access to the S3 bucket storing the logs. Default value is for eu-west-1
    Default: "073919355633"

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties: 
      Tags:
        - Key: CreatedBy
          Value: joelbarenco
        - Key: Environment
          Value: !Ref DevEnvironment
        - Key: Name
          Value: !Sub ${Name}-ecs_cluster-${DevEnvironment}
        - Key: Product
          Value: tbd
        - Key: Repo
          Value: https://github.com/wantedmedia/movieapi

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: EC2
      SchedulingStrategy: REPLICA
      Tags:
        - Key: CreatedBy
          Value: joelbarenco
        - Key: Environment
          Value: !Ref DevEnvironment
        - Key: Name
          Value: !Sub ${Name}-ecs_service-${DevEnvironment}
        - Key: Product
          Value: tbd
        - Key: Repo
          Value: https://github.com/wantedmedia/movieapi

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: APIMovie
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: APIMovie
          # Image: !Sub 430105358689.dkr.ecr.eu-west-1.amazonaws.com/com.reachplc/${Name}:${BuildNumber}
          Image: !Sub 073919355633.dkr.ecr.eu-west-1.amazonaws.com/${Name}:latest
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: TM_ENV
              Value: !Ref DevEnvironment
            - Name: SERVER_NAME
              Value: !Ref Name
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'
      Tags:
        - Key: CreatedBy
          Value: joelbarenco
        - Key: Environment
          Value: !Ref DevEnvironment
        - Key: Name
          Value: !Sub ${Name}-ecs_task_definition-${DevEnvironment}
        - Key: Product
          Value: tbd
        - Key: Repo
          Value: https://github.com/wantedmedia/movieapi
        
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/${Name}-${DevEnvironment}
      RetentionInDays: 7

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: ['ecs-tasks.amazonaws.com']
      Path: /
      Policies:
        - PolicyName: "ECR-and-logs"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:DescribeImages"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:DescribeRepositories"
                  - "ecr:ListImages"
                  - "ecr:BatchCheckLayerAvailability"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
      Tags:
        - Key: CreatedBy
          Value: joelbarenco
        - Key: Environment
          Value: !Ref DevEnvironment
        - Key: Name
          Value: !Sub ${Name}-ecs_task_role-${DevEnvironment}
        - Key: Product
          Value: tbd
        - Key: Repo
          Value: https://github.com/wantedmedia/movieapi    
